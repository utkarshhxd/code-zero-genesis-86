
import { Button } from '@/components/ui/button';
import { Link } from 'react-router-dom';
import Navbar from '@/components/Navbar';
import Hero from '@/components/Hero';
import { ArrowRight, Cpu, Database, BookOpen, Code } from 'lucide-react';
import { useEffect, useRef } from 'react';

const Index = () => {
  const features = [
    {
      icon: <Cpu className="h-10 w-10 text-zerox-blue" />,
      title: "AI-Generated Problems",
      description: "Get custom coding challenges tailored to your skill level and areas of interest, all generated by OpenAI."
    },
    {
      icon: <Database className="h-10 w-10 text-zerox-purple" />,
      title: "Smart Code Analysis",
      description: "Receive intelligent feedback on your code with detailed suggestions for optimization and improvement."
    },
    {
      icon: <BookOpen className="h-10 w-10 text-zerox-blue-light" />,
      title: "Comprehensive Learning",
      description: "Access detailed explanations, visualizations, and step-by-step solutions to understand complex algorithms."
    }
  ];

  const cardsContainer = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const container = cardsContainer.current;
    if (!container) return;

    const handleMouseMove = (e: MouseEvent) => {
      const cards = container.getElementsByClassName('glass-card');
      const containerRect = container.getBoundingClientRect();

      Array.from(cards).forEach((card) => {
        const cardEl = card as HTMLElement;
        const cardRect = cardEl.getBoundingClientRect();
        const cardCenterX = cardRect.left + cardRect.width / 2;
        const cardCenterY = cardRect.top + cardRect.height / 2;

        const angleX = (e.clientY - cardCenterY) / 30;
        const angleY = -(e.clientX - cardCenterX) / 30;

        cardEl.style.transform = `perspective(1000px) rotateX(${angleX}deg) rotateY(${angleY}deg) translateZ(10px)`;
      });
    };

    const handleMouseLeave = () => {
      const cards = container.getElementsByClassName('glass-card');
      Array.from(cards).forEach((card) => {
        const cardEl = card as HTMLElement;
        cardEl.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) translateZ(0)';
      });
    };

    container.addEventListener('mousemove', handleMouseMove);
    container.addEventListener('mouseleave', handleMouseLeave);

    return () => {
      container.removeEventListener('mousemove', handleMouseMove);
      container.removeEventListener('mouseleave', handleMouseLeave);
    };
  }, []);

  return (
    <div className="min-h-screen bg-zerox-dark">
      <Navbar />
      
      <main>
        <Hero />
        
        {/* Features Section */}
        <section className="py-20 px-4 sm:px-6 lg:px-8 relative overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-b from-zerox-dark via-zerox-dark to-zerox-darker"></div>
          
          <div className="max-w-7xl mx-auto relative">
            <div className="text-center mb-16">
              <h2 className="text-3xl sm:text-4xl font-bold mb-4 transform transition-transform hover:scale-105 duration-300" style={{ 
                background: "linear-gradient(123deg, rgba(212, 223, 232, 0.77), rgba(58, 116, 152, 1), rgba(0, 43, 77, 1))",
                WebkitBackgroundClip: "text",
                MozBackgroundClip: "text",
                backgroundClip: "text",
                WebkitTextFillColor: "transparent",
                MozTextFillColor: "transparent",
              }}>
                Supercharge Your Coding Skills
              </h2>
              <p className="text-xl text-gray-400 max-w-3xl mx-auto">
                Zero X combines advanced AI and real-time code execution to help you master data structures and algorithms.
              </p>
            </div>
            
            <div ref={cardsContainer} className="grid grid-cols-1 md:grid-cols-3 gap-8">
              {features.map((feature, index) => (
                <div 
                  key={index}
                  className="glass-card rounded-xl p-6 transition-all duration-300 hover:shadow-[0_0_30px_rgba(0,180,216,0.2)]"
                  style={{ transition: 'transform 0.3s ease' }}
                >
                  <div className="h-14 w-14 rounded-full bg-zerox-dark/50 flex items-center justify-center mb-6">
                    {feature.icon}
                  </div>
                  <h3 className="text-xl font-bold text-white mb-2">{feature.title}</h3>
                  <p className="text-gray-400">{feature.description}</p>
                </div>
              ))}
            </div>
          </div>
        </section>
        
        {/* Call to Action */}
        <section className="py-16 px-4 sm:px-6 lg:px-8 bg-zerox-darker relative overflow-hidden">
          <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-zerox-blue to-zerox-purple"></div>
          <div className="absolute -top-40 -right-40 w-80 h-80 bg-zerox-blue/10 rounded-full filter blur-3xl"></div>
          <div className="absolute -bottom-40 -left-40 w-80 h-80 bg-zerox-purple/10 rounded-full filter blur-3xl"></div>
          
          <div className="max-w-7xl mx-auto text-center relative">
            <h2 className="text-3xl sm:text-4xl font-bold text-white mb-6">Ready to Elevate Your Coding Skills?</h2>
            <p className="text-xl text-gray-400 max-w-3xl mx-auto mb-10">
              Start solving AI-generated problems and accelerate your path to becoming a coding expert.
            </p>
            
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button asChild className="bg-gradient-to-r from-zerox-blue to-zerox-purple text-white px-8 py-6 text-lg">
                <Link to="/problems">
                  Start Coding <ArrowRight className="ml-2 h-5 w-5" />
                </Link>
              </Button>
            </div>
          </div>
        </section>
      </main>
      
      {/* Footer */}
      <footer className="bg-zerox-darker py-12 px-4 border-t border-zerox-gray/20">
        <div className="max-w-7xl mx-auto">
          <div className="flex flex-col md:flex-row justify-between items-center">
            <div className="flex items-center mb-6 md:mb-0">
              <Link to="/" className="flex items-center">
                <div className="bg-gradient-to-r from-zerox-blue to-zerox-purple p-[1px] rounded-md">
                  <div className="bg-zerox-darker h-8 w-8 flex items-center justify-center rounded-md">
                    <Code className="h-5 w-5 text-white" />
                  </div>
                </div>
                <span className="ml-2 text-xl font-bold gradient-text">Zero X</span>
              </Link>
            </div>
            
            <div className="flex flex-col md:flex-row md:space-x-8 space-y-4 md:space-y-0 items-center">
              <Link to="/" className="text-gray-400 hover:text-white">Home</Link>
              <Link to="/problems" className="text-gray-400 hover:text-white">Problems</Link>
              <Link to="/learn" className="text-gray-400 hover:text-white">Learn</Link>
            </div>
          </div>
          
          <div className="mt-8 pt-8 border-t border-zerox-gray/20 text-center text-gray-500 text-sm">
            <p>&copy; {new Date().getFullYear()} Zero X. All rights reserved.</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;
